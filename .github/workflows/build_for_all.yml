name: Build and Deploy RPM, DEB

on:
  push:
    tags:
      - 'v*'
      - 'V*'

jobs:
  build-rpm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip rpm

      - name: Set up RPM directories
        run: |
          mkdir -p ~/rpmbuild/SPECS ~/rpmbuild/SOURCES

      - name: Install Python dependencies
        run: pip3 install --no-cache-dir requests pyinstaller setuptools

      - name: Build the Python project with PyInstaller
        run: pyinstaller --onefile ~/work/Virtual-CANDY/Virtual-CANDY/src/app.py --name=vcandy

      - name: Create RPM spec file
        run: |
          cat <<EOF > ~/rpmbuild/SPECS/vcandy.spec
          %global debug_package %{nil}

          Summary: VCANDY is a Python CLI and TUI application package manager that handles the json files installing packages.
          Name: vcandy
          Version: $(echo ${GITHUB_REF#refs/tags/} | sed 's/^[Vv]//')
          Release: 1%{?dist}
          License: MIT
          URL: https://github.com/Hakanbaban53/Container-and-Virtualization-Installer
          Source0: %{name}-%{version}.tar.gz

          %description
          VCANDY is a Python CLI and TUI application package manager that handles the json files installing packages.

          %prep
          %setup -q

          %install
          rm -rf %{buildroot}
          mkdir -p %{buildroot}/%{_bindir}
          cp %{name} %{buildroot}/%{_bindir}

          %clean
          rm -rf %{buildroot}

          %files
          %{_bindir}/%{name}

          %changelog
          * Thu Mar 19 2024 Hakan İSMAİL <hakanismail53@gmail.com> - $(echo ${GITHUB_REF#refs/tags/} | sed 's/^[Vv]//')
          - UI improvements and bug fixes
          EOF

      - name: Create binary folder
        run: mkdir vcandy-$(echo ${GITHUB_REF#refs/tags/} | sed 's/^[Vv]//')

      - name: Move binary to binary folder
        run: mv ./dist/vcandy vcandy-$(echo ${GITHUB_REF#refs/tags/} | sed 's/^[Vv]//')

      - name: Create .tar.gz file and move to SOURCES folder
        run: |
          tar --create --file vcandy-$(echo ${GITHUB_REF#refs/tags/} | sed 's/^[Vv]//').tar.gz vcandy-$(echo ${GITHUB_REF#refs/tags/} | sed 's/^[Vv]//')
          mv vcandy-$(echo ${GITHUB_REF#refs/tags/} | sed 's/^[Vv]//').tar.gz ~/rpmbuild/SOURCES

      - name: Build RPM package
        run: rpmbuild -bb ~/rpmbuild/SPECS/vcandy.spec

      - name: Upload RPM package as artifact
        uses: actions/upload-artifact@v3
        with:
          name: vcandy.rpm
          path: ~/rpmbuild/RPMS/**/*.rpm

  build-deb:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip debhelper python3-venv

      - name: Set up DEB directories
        run: |
          mkdir -p ~/vcandy/bin ~/vcandy/DEBIAN

      - name: Install Python dependencies
        run: pip3 install --no-cache-dir requests pyinstaller setuptools

      - name: Build the Python project with PyInstaller
        run: pyinstaller --onefile ~/work/Virtual-CANDY/Virtual-CANDY/src/app.py --name=vcandy

      - name: Create DEB control file
        run: |
          cat <<EOF > ~/vcandy/DEBIAN/control
          Package: vcandy
          Version: $(echo ${GITHUB_REF#refs/tags/} | sed 's/^[Vv]//')
          Architecture: all
          Section: python
          Priority: optional
          Maintainer: Hakan İSMAİL <hakanismail53@gmail.com>
          Homepage: https://github.com/Hakanbaban53/Virtual-CANDY
          Description: VCANDY is a Python CLI and TUI application package manager that handles the json files installing packages.
          EOF

      - name: Move the binary file to the build directory
        run: mv ./dist/vcandy ~/vcandy/bin

      - name: Build DEB package
        run: dpkg-deb --root-owner-group --build ~/vcandy

      - name: Upload DEB package as artifact
        uses: actions/upload-artifact@v3
        with:
          name: vcandy.deb
          path: ~/vcandy.deb

  create-release:
    runs-on: ubuntu-latest
    needs: [build-rpm, build-deb]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Extract Release Info
        id: release_info
        shell: bash
        run: |
          # Extract version number from the tag
          VERSION=$(echo ${GITHUB_REF#refs/tags/} | sed 's/^[Vv]//')
          TAG=${GITHUB_REF/refs\/tags\//}
          
          # Extract commit message and extended description
          COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)
          EXTENDED_DESCRIPTION=$(git log -1 --pretty=format:%b)

          # Format the release notes
          if [ -z "$EXTENDED_DESCRIPTION" ]; then
            BODY="### Release Notes:
            **$COMMIT_MESSAGE**"
          else
            BODY="### Release Notes:
            **$COMMIT_MESSAGE**
            $EXTENDED_DESCRIPTION"
          fi

          # Write outputs to GITHUB_OUTPUT for later steps
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo "BODY<<EOF" >> $GITHUB_OUTPUT
          echo "$BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Download RPM Artifact
        uses: actions/download-artifact@v3
        with:
          name: vcandy.rpm
          path: ./
  
      - name: Download DEB Artifact
        uses: actions/download-artifact@v3
        with:
          name: vcandy.deb
          path: ./
  
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.VCGITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_info.outputs.TAG }}
          release_name: Release ${{ steps.release_info.outputs.TAG }}
          body: ${{ steps.release_info.outputs.BODY }}
          draft: false
          prerelease: false
  
      - name: Upload RPM to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VCGITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/Virtual-CANDY/Virtual-CANDY/x86_64/vcandy-${{ steps.release_info.outputs.VERSION }}-1.x86_64.rpm
          asset_name: vcandy-${{ steps.release_info.outputs.VERSION }}.rpm
          asset_content_type: application/x-rpm
  
      - name: Upload DEB to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VCGITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/Virtual-CANDY/Virtual-CANDY/vcandy.deb
          asset_name: vcandy-${{ steps.release_info.outputs.VERSION }}.deb
          asset_content_type: application/x-debian-package

